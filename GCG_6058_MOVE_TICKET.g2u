Program.Sub.ScreenSU.Start
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
'UPDATE JOB POPULATE HOOK
F.Intrinsic.Control.If(V.Caller.Hook,=,"15840")
	Variable.passed.000048.set("Move Ticket")
	F.Intrinsic.Control.End
F.Intrinsic.Control.EndIf
Program.Sub.Preflight.End

Program.Sub.Main.Start
'Modified on 4.23.2019 To alow printing to Code soft Lable
'Modified on 7.23.2019 To Log Move tickets to track down multy print issues.

V.global.sParams.Declare(String)
V.global.sValues.Declare(String)
V.global.sjob.Declare(String)
V.global.ssuffix.Declare(String)
V.global.sseq.Declare(String)
V.global.sQty.Declare(String)
V.global.sQtyCompleted.Declare(String)
V.global.sWC.Declare(String)
V.global.sEmployee.Declare(String)
V.global.sscrapqty.Declare(String)
V.global.sCloseflag.Declare(String)
V.global.sScrapflag.Declare(String)
V.global.sScrapCode.Declare(String)
V.global.sScrapDescription.Declare(String)
V.global.sLMO.Declare(String)
V.global.sQualitynbr.Declare(String)
V.global.sCurPart.Declare(String)
V.global.sCurDescr.Declare(String)
V.global.sPart.Declare(String)
V.global.sPartDescr.Declare(String)
V.global.sCust.Declare(String)
V.global.sName.Declare(String)
V.global.sNextSeq.Declare(String)
V.global.sNextPart.Declare(String)
V.global.sNextDescr.Declare(String)
V.global.sWOQty.Declare(String)
V.global.sWOCustQty.Declare(String)
V.global.sWOPriority.Declare(String)
V.global.sWODateDue.Declare(Date)
V.global.sNext_DateStart.Declare(Date)
V.global.sNext_DateDue.Declare(Date)
V.global.sTopParentPart.Declare(String)
V.global.sTopParentJob.Declare(String)
V.global.sTopParentSuffix.Declare(String)
V.global.sTopParentDescr.Declare(String)
V.global.sParentPart.Declare(String)
V.global.sParentDescr.Declare(String)
V.global.sParentJob.Declare(String)
V.global.sParentSuffix.Declare(String)
V.global.iRptId.Declare(Long)
V.global.srptLoc.Declare(String)
V.global.sTPrinter.Declare(String)
V.global.sParentInitWC.Declare(String)
V.global.sScrapRef.Declare(String)
V.global.sScrapPrinter.Declare(String)
V.global.sComments.Declare(String)
V.global.sScreenData.Declare(String)
V.global.iRows.Declare(Long)
V.global.i.Declare(Long)
V.global.retVar.Declare(String)
V.global.retPos.Declare(String)

V.global.sSel.Declare(String)
V.global.sSelA.Declare(String)
V.global.sSelB.Declare(String)

V.global.sQty.Set(".000000")
V.global.sscrapqty.Set(".000000")
V.local.sDSN.Declare(String)
V.Local.sSQL.Declare(String)

v.Local.FieldNames.Declare(String)
v.Local.FieldTypes.Declare(String)

v.Local.FieldNames.Set("TRMNL*!*JOB*!*SUFFIX*!*CUR_SEQ*!*CUR_PART*!*CUR_DESCR*!*LMO*!*QTY*!*WORKCENTER*!*EMPLOYEE*!*QUALITY_NO*!*SCRAP_CODE*!*SCRAP_CODE_DESC*!*SCRAP_QTY*!*CLOSE_FLAG*!*PART*!*CUSTOMER*!*NAME*!*NEXT_SEQ*!*NEXT_PART*!*NEXT_DESCR*!*Parent_Job*!*Parent_Suffix*!*Parent_Part*!*Parent_Descr*!*Top_Parent_Job*!*Top_Parent_Suffix*!*Top_Parent_Part*!*Top_Parent_Descr*!*NEXT_SEQ_START*!*NEXT_SEQ_DUE*!*WO_PRIORITY*!*PART_DESCR*!*WO_QTY*!*WO_CUSTOMER_QTY*!*WO_DUE_DATE*!*QTY_COMPLETED*!*Parent_InitWC*!*Comments")
v.Local.FieldTypes.Set("String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String")

Function.Data.DataTable.CreateFromString("dtLableData","",v.Local.FieldNames,v.Local.FieldTypes,"@@","!!",TRUE)


'Function.Intrinsic.String.Build("Global_{0}",V.Caller.CompanyCode,V.Local.sDSN)
'F.ODBC.Connection!con.OpenCOnnection(V.Local.sDSN,"Master","master")

Function.ODBC.Connection!con.OpenCompanyConnection(300)


'if called from the script1 button on GUI update job
F.Intrinsic.Control.If(V.Caller.Hook,=,"15850")
	
	V.global.sjob.Set(V.passed.009990)
	V.global.ssuffix.Set(V.Passed.009991)
	V.global.sseq.Set(V.Passed.009992)
	V.global.sQty.Set(V.Passed.000001)
	V.global.sWC.Set(V.Passed.000010)
	V.global.sEmployee.Set(V.Passed.009994)
	V.global.sscrapqty.Set(V.Passed.000002)
	V.global.sCloseflag.Set(V.Passed.000003)
	V.global.sQualitynbr.Set(V.Passed.010002)
	V.global.sScrapRef.Set(1)
	V.global.sComments.Set(V.Passed.Comments)
	F.Intrinsic.String.Replace(V.Passed.Comments,"<CRLF>"," ",V.global.sComments)
	F.Intrinsic.Control.CallSub(Printticket)
F.Intrinsic.Control.EndIf

'POST UPDATE JOB HOOK
F.Intrinsic.Control.If(V.Caller.Hook,=,"15881")
	V.global.sjob.Set(V.passed.009990)
	V.global.ssuffix.Set(V.Passed.009991)
	V.global.sseq.Set(V.Passed.009992)
	V.global.sQty.Set(V.Passed.000001)
	V.global.sWC.Set(V.Passed.000010)
	V.global.sEmployee.Set(V.Passed.009994)
	V.global.sscrapqty.Set(V.Passed.000002)
	V.global.sCloseflag.Set(V.Passed.000003)
	V.global.sQualitynbr.Set(V.Passed.010002)
	V.global.sScrapRef.Set(V.Passed.SCRAP-REF)
	V.global.sComments.Set(V.Passed.Comments)
	F.Intrinsic.String.Replace(V.Passed.Comments,"<CRLF>"," ",V.global.sComments)

	F.Intrinsic.Control.CallSub(Printticket)
F.Intrinsic.Control.EndIf

'CALLED FROM UNATTENDED PRODUCTION ENTRY
Function.Intrinsic.Control.If(V.Caller.Switches,=,"U")
Function.Intrinsic.Control.AndIf(V.Caller.Hook,<>,"15881")
	Function.Intrinsic.String.Build("SELECT * FROM OYB_UNATTENDED_PROD WHERE TERMINAL = '{0}' AND PRINTED = 0", V.Caller.Terminal,V.Local.sSQL)
	Function.ODBC.Connection!con.OpenLocalRecordsetRW("rst", V.Local.sSQL)
	Function.Intrinsic.Control.DoUntil(V.ODBC.con!Rst.EOF,=,True)
		V.global.sjob.Set(v.ODBC.CON!rst.FieldValTrim!JOB)
		V.global.ssuffix.Set(v.ODBC.CON!rst.FieldValTrim!SUFFIX)
		V.global.sseq.Set(v.ODBC.CON!rst.FieldValTrim!SEQ)
		V.global.sQty.Set(v.ODBC.CON!rst.FieldValFloat!QTY)
		V.global.sWC.Set(v.ODBC.CON!rst.FieldValTrim!WC)
		V.global.sEmployee.Set(v.ODBC.CON!rst.FieldValTrim!EMPLOYEE)
		V.global.sscrapqty.Set(".000000")
		V.global.sCloseflag.Set(v.ODBC.CON!rst.FieldValTrim!CLOSE)
		V.global.sQualitynbr.Set(v.ODBC.CON!rst.FieldValTrim!QUALITY_NO)
		V.global.sScrapRef.Set("")
		V.global.sComments.Set(v.ODBC.CON!rst.FieldValTrim!COMMENTS)
		F.Intrinsic.Control.CallSub(Printticket)
		Function.ODBC.con!rst.Set!PRINTED(True)
		Function.ODBC.con!rst.Update
		Function.ODBC.con!rst.MoveNext
	Function.Intrinsic.Control.Loop
	Function.ODBC.con!rst.Close
Function.Intrinsic.Control.EndIf

F.Intrinsic.Control.CallSub(Unload)
Program.Sub.Main.End

Program.Sub.Unload.Start

F.ODBC.Connection!Con.Close
F.Intrinsic.Control.End

Program.Sub.Unload.End

Program.Sub.PrintTicket.Start
'if good pieces is 0 then don't continue
F.Intrinsic.Control.If(V.global.sQty,=,".000000")
F.Intrinsic.Control.AndIf(V.global.sscrapqty,=,".000000")
	F.Intrinsic.Control.CallSub(Unload)
F.Intrinsic.Control.EndIf
''READ
F.Intrinsic.String.Concat("select PART,DESCRIPTION,UNITS_COMPLETE from V_JOB_OPERATIONS where JOB='",V.global.sjob,"' and SUFFIX='",V.global.ssuffix,"' and SEQ='",V.global.sseq,"'",V.global.sSel)
F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.global.sSel)
	F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
		V.global.sCurPart.Set(V.ODBC.Con!rstSel.FieldValTrim!PART)
		V.global.sCurDescr.Set(V.ODBC.Con!rstSel.FieldValTrim!DESCRIPTION)
		V.global.sQtyCompleted.Set(V.ODBC.Con!rstSel.FieldValTrim!UNITS_COMPLETE)

	F.Intrinsic.Control.EndIf
F.ODBC.Con!rstSel.Close
''READ
F.Intrinsic.String.Concat("select SEQ,PART,DESCRIPTION,LMO,DATE_START,DATE_DUE,UNITS_COMPLETE from V_JOB_OPERATIONS where JOB='",V.global.sjob,"' and SUFFIX='",V.global.ssuffix,"' and SEQ>'",V.global.sseq,"' and LMO <> 'C'  and LMO <> 'M'  and Task_Seq <> 'T' order by SEQ",V.global.sSel)
F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.global.sSel)
	F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
		V.global.sNextSeq.Set(V.ODBC.Con!rstSel.FieldValTrim!SEQ)
		V.global.sNextPart.Set(V.ODBC.Con!rstSel.FieldValTrim!PART)
		V.global.sNextDescr.Set(V.ODBC.Con!rstSel.FieldValTrim!DESCRIPTION)
		V.global.sLMO.Set(V.ODBC.Con!rstSel.FieldValTrim!LMO)
		V.global.sNext_DateStart.Set(V.ODBC.Con!rstSel.FieldValTrim!DATE_START)
		V.global.sNext_DateDue.Set(V.ODBC.Con!rstSel.FieldValTrim!DATE_DUE)
	F.Intrinsic.Control.EndIf
F.ODBC.Con!rstSel.Close
''READ
F.Intrinsic.String.Concat("select PART,CUSTOMER,PRIORITY,PART_DESCRIPTION,QTY_ORDER,QTY_CUSTOMER,DATE_DUE  from V_JOB_HEADER where JOB='",V.global.sjob,"' and SUFFIX='",V.global.ssuffix,"'",V.global.sSel)
F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.global.sSel)
	F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
		V.global.sPart.Set(V.ODBC.Con!rstSel.FieldValTrim!PART)
		V.global.sCust.Set(V.ODBC.Con!rstSel.FieldValTrim!CUSTOMER)
		V.global.sWOPriority.Set(V.ODBC.Con!rstSel.FieldValTrim!PRIORITY)
		V.global.sPartDescr.Set(V.ODBC.Con!rstSel.FieldValTrim!PART_DESCRIPTION)
		V.global.sWOQty.Set(V.ODBC.Con!rstSel.FieldValTrim!QTY_ORDER)
		V.global.sWOCustQty.Set(V.ODBC.Con!rstSel.FieldValTrim!QTY_CUSTOMER)
		V.global.sWODateDue.Set(V.ODBC.Con!rstSel.FieldValTrim!DATE_DUE)
	F.Intrinsic.Control.EndIf
F.ODBC.Con!rstSel.Close
''READ
F.Intrinsic.String.Concat("select NAME_CUSTOMER from V_CUSTOMER_MASTER where CUSTOMER='",V.global.sCust,"'",V.global.sSel)
F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.global.sSel)
	F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
		V.global.sName.Set(V.ODBC.Con!rstSel.FieldValTrim!NAME_CUSTOMER)
	F.Intrinsic.Control.EndIf
F.ODBC.Con!rstSel.Close

''READ
F.Intrinsic.Control.If(V.Caller.GSSVersion,"=","2010%")
	F.Intrinsic.String.Concat("select SCRAP_REASON from V_JOBS_IN_PROCESS where JOB='",V.global.sjob,"' and SUFFIX='",V.global.ssuffix,"' and SEQUENCE ='",V.global.sseq,"' and EMPLOYEE_NAME='",V.global.sEmployee,"'  order by sequence_key desc",V.global.sSel)
	F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.global.sSel)
	F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
		V.global.sScrapCode.Set(V.ODBC.Con!rstSel.FieldValTrim!SCRAP_REASON)
		F.Intrinsic.String.Concat("select SCRAP_CODE_DESC from V_RJCT_SCRP_CODES where SCRAP_CODE='",V.global.sScrapCode,"'",V.global.sSelA)
		F.ODBC.Connection!Con.OpenRecordsetRO("rstSelA",V.global.sSelA)
			F.Intrinsic.Control.If(V.ODBC.Con!rstSelA.EOF,=,False)
			V.global.sScrapDescription.Set(V.ODBC.Con!rstSelA.FieldValTrim!SCRAP_CODE_DESC)
			F.Intrinsic.Control.EndIf
		F.ODBC.Con!rstSelA.Close
	F.Intrinsic.Control.EndIf
	F.ODBC.Con!rstSel.Close
F.Intrinsic.Control.EndIf
''READ
F.Intrinsic.String.Concat("select Parent_WO,Parent_Suffix_Parent from V_JOB_HEADER where Job='",V.global.sjob,"' and SUFFIX='",V.global.ssuffix,"'",V.global.sSel)
F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.global.sSel)
	F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
		V.global.sParentJob.Set(V.ODBC.Con!rstSel.FieldValTrim!Parent_WO)
		V.global.sParentSuffix.Set(V.ODBC.Con!rstSel.FieldValTrim!Parent_Suffix_Parent)
		F.Intrinsic.String.Concat("select Part, Part_Description from V_JOB_HEADER where Job='",V.global.sParentJob,"' and Suffix='",V.global.sParentSuffix,"'",V.global.sSelA)
		F.ODBC.Connection!Con.OpenRecordsetRO("rstSelA",V.global.sSelA)
			F.Intrinsic.Control.If(V.ODBC.Con!rstSelA.EOF,=,False)
				V.global.sParentPart.Set(V.ODBC.Con!rstSelA.FieldValTrim!Part)
				V.global.sParentDescr.Set(V.ODBC.Con!rstSelA.FieldValTrim!Part_Description)
			F.Intrinsic.Control.EndIf
		F.ODBC.Con!rstSelA.Close

	F.Intrinsic.Control.EndIf
F.ODBC.Con!rstSel.Close
''READ
F.Intrinsic.String.Concat("select Job,Suffix,Part, Part_Description from V_JOB_HEADER where Job='",V.global.sjob,"' and SUFFIX='000'",V.global.sSel)
F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.global.sSel)
	F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
		V.global.sTopParentJob.Set(V.ODBC.Con!rstSel.FieldValTrim!Job)
		V.global.sTopParentSuffix.Set(V.ODBC.Con!rstSel.FieldValTrim!Suffix)
		V.global.sTopParentPart.Set(V.ODBC.Con!rstSel.FieldValTrim!Part)
		V.global.sTopParentDescr.Set(V.ODBC.Con!rstSel.FieldValTrim!Part_Description)
	F.Intrinsic.Control.EndIf
F.ODBC.Con!rstSel.Close
''READ
F.Intrinsic.String.Concat("select PART from V_JOB_OPERATIONS where JOB='",V.global.sParentJob,"' and SUFFIX='",V.global.sParentSuffix,"' and LMO = 'L' order by SEQ",V.global.sSel)
F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.global.sSel)
	F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
		V.global.sParentInitWC.Set(V.ODBC.Con!rstSel.FieldValTrim!PART)
	F.Intrinsic.Control.EndIf
F.ODBC.Con!rstSel.Close
''WRITE, CHange to Load into DT for Printing.
'Can still be writen to data table if there is a need, currently commented out
'---------------------------------------------------------------------------------------------------------
Function.Data.DataTable.SetValue("dtLableData",0,"TRMNL",V.Caller.Terminal)
Function.Data.DataTable.SetValue("dtLableData",0,"JOB",V.global.sjob)
Function.Data.DataTable.SetValue("dtLableData",0,"SUFFIX",V.global.ssuffix)
Function.Data.DataTable.SetValue("dtLableData",0,"CUR_SEQ",V.global.sseq)
Function.Data.DataTable.SetValue("dtLableData",0,"CUR_PART",V.global.sCurPart)
Function.Data.DataTable.SetValue("dtLableData",0,"CUR_DESCR",V.global.sCurDescr)
Function.Data.DataTable.SetValue("dtLableData",0,"LMO",V.global.sLMO)
Function.Data.DataTable.SetValue("dtLableData",0,"QTY",V.global.sQty)
Function.Data.DataTable.SetValue("dtLableData",0,"WORKCENTER",V.global.sWC)
Function.Data.DataTable.SetValue("dtLableData",0,"EMPLOYEE",V.global.sEmployee)
Function.Data.DataTable.SetValue("dtLableData",0,"QUALITY_NO",V.global.sQualitynbr)
Function.Data.DataTable.SetValue("dtLableData",0,"SCRAP_CODE",V.global.sScrapCode)
Function.Data.DataTable.SetValue("dtLableData",0,"SCRAP_CODE_DESC",V.global.sScrapDescription)
Function.Data.DataTable.SetValue("dtLableData",0,"SCRAP_QTY",V.global.sscrapqty)
Function.Data.DataTable.SetValue("dtLableData",0,"CLOSE_FLAG",V.global.sCloseflag)
Function.Data.DataTable.SetValue("dtLableData",0,"PART",V.global.sPart)
Function.Data.DataTable.SetValue("dtLableData",0,"CUSTOMER",V.global.sCust)
Function.Data.DataTable.SetValue("dtLableData",0,"NAME",V.global.sName)
Function.Data.DataTable.SetValue("dtLableData",0,"NEXT_SEQ",V.global.sNextSeq)
Function.Data.DataTable.SetValue("dtLableData",0,"NEXT_PART",V.global.sNextPart)
Function.Data.DataTable.SetValue("dtLableData",0,"NEXT_DESCR",V.global.sNextDescr)
Function.Data.DataTable.SetValue("dtLableData",0,"Parent_Job",V.global.sParentJob)
Function.Data.DataTable.SetValue("dtLableData",0,"Parent_Suffix",V.global.sParentSuffix)
Function.Data.DataTable.SetValue("dtLableData",0,"Parent_Part",V.global.sParentPart)
Function.Data.DataTable.SetValue("dtLableData",0,"Parent_Descr",V.global.sParentDescr)
Function.Data.DataTable.SetValue("dtLableData",0,"Top_Parent_Job",V.global.sTopParentJob)
Function.Data.DataTable.SetValue("dtLableData",0,"Top_Parent_Suffix",V.global.sTopParentSuffix)
Function.Data.DataTable.SetValue("dtLableData",0,"Top_Parent_Part",V.global.sTopParentPart)
Function.Data.DataTable.SetValue("dtLableData",0,"Top_Parent_Descr",V.global.sTopParentDescr)
Function.Data.DataTable.SetValue("dtLableData",0,"NEXT_SEQ_START",V.global.sNext_DateStart)
Function.Data.DataTable.SetValue("dtLableData",0,"NEXT_SEQ_DUE",V.global.sNext_DateDue)
Function.Data.DataTable.SetValue("dtLableData",0,"WO_PRIORITY",V.global.sWOPriority)
Function.Data.DataTable.SetValue("dtLableData",0,"PART_DESCR",V.global.sPartDescr)
Function.Data.DataTable.SetValue("dtLableData",0,"WO_QTY",V.global.sWOQty)
Function.Data.DataTable.SetValue("dtLableData",0,"WO_CUSTOMER_QTY",V.global.sWOCustQty)
Function.Data.DataTable.SetValue("dtLableData",0,"WO_DUE_DATE",V.global.sWODateDue)
Function.Data.DataTable.SetValue("dtLableData",0,"QTY_COMPLETED",V.global.sQtyCompleted)
Function.Data.DataTable.SetValue("dtLableData",0,"Parent_InitWC",V.global.sParentInitWC)
Function.Data.DataTable.SetValue("dtLableData",0,"Comments",V.global.sComments)
'---------------------------------------------------------------------------------------------------------

''Additional Label info not in old table
Function.Data.DataTable.AddColumn("dtLableData","SCRAP_FLAG","String")
Function.Data.DataTable.AddColumn("dtLableData","CODE_SORT","String")
Function.Intrinsic.String.Build("SELECT TOP 1 A.CODE_SORT FROM V_INVENTORY_MSTR AS A WHERE A.PART = (select top 1 B.PART from JOB_HEADER as B WHERE B.JOB = '{0}' AND B.SUFFIX = '{1}')",v.Global.sjob,v.Global.ssuffix,v.Global.sSel)
V.Local.sSel.Declare(String)
Function.ODBC.Connection!Con.ExecuteAndReturn(v.Global.sSel,v.Local.sSel)
Function.Data.DataTable.SetValue("dtLableData",0,"CODE_SORT",v.Local.sSel)



'FIND PRINTERS
F.Intrinsic.String.Concat("select Printer,ScrapPrinter from ATG_Move_Tckt_Setup where TRMNL='",V.Caller.Terminal,"'",V.global.sSel)
F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.global.sSel)
	F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
		V.global.sTPrinter.Set(V.ODBC.Con!rstSel.FieldValTrim!Printer)
		F.Intrinsic.Control.If(V.ODBC.Con!rstSel.FieldValTrim!ScrapPrinter,=,"")
		V.global.sScrapPrinter.Set(V.global.sTPrinter)
		F.Intrinsic.Control.Else
		V.global.sScrapPrinter.Set(V.ODBC.Con!rstSel.FieldValTrim!ScrapPrinter)
		F.Intrinsic.Control.EndIf
	Function.Intrinsic.Control.Else
		V.Global.sTprinter.Set("")
		V.Global.sScrapCode.Set("")
	F.Intrinsic.Control.EndIf
F.ODBC.Con!rstSel.Close	

F.Intrinsic.Control.If(V.Caller.Hook,=,"15881")
	Function.Intrinsic.Control.CallSub("MoveTicketLog")
Function.Intrinsic.Control.EndIf
F.Global.BI.GetIDFromName("OYB_MOVE_TICKET.lab",V.Global.iRptId)
Function.Intrinsic.Control.CallSub("BICodeSoft")

'---------------------------------------------------------------------------------------------------------
'F.Intrinsic.String.Concat("delete from ATG_WIP_Oper_Label where TRMNL='",V.Caller.Terminal,"'",V.global.sSel)
'F.ODBC.Connection!Con.Execute(V.global.sSel)
'Function.Data.DataTable.SaveToDB("dtLableData","Con","ATG_WIP_Oper_Label")
'F.Global.BI.GetIDFromName("OYB_MOVE_TICKET.rpt",V.Global.iRptId)
'Function.Intrinsic.Control.CallSub("BICrystal")


Program.Sub.PrintTicket.End

Program.Sub.BICodeSoft.Start
v.Local.iBIRunID.Declare(Long)
v.Local.iLogID.Declare(Long)



'START LOGGING
F.Global.BI.GetRunID(V.Local.iBIRunID)
F.Global.BI.StartLogging(V.Local.iBIRunID,V.Global.iRptId,0,"",V.Local.iLogID)


'PRINT LABLE IF NOT Compleately Scrap, print a non-scrap label
F.Intrinsic.Control.If(V.global.sQty,<>,".000000")
	Function.Data.DataTable.SetValue("dtLableData",0,"SCRAP_FLAG","N")
	F.Global.BI.PrintCodesoftLabelFromDataTable(V.Local.iBIRunID,V.Local.iLogID,"dtLableData",V.Global.sTPrinter,True)	
F.Intrinsic.Control.EndIf


'PRINT LABLE IF SOME SCRAP EXISTS
F.Intrinsic.Control.If(V.global.sscrapqty,<>,".000000")
	Function.Data.DataTable.SetValue("dtLableData",0,"SCRAP_FLAG","Y")
	
	
'Scrap - loop through scrap_data table by scrap_ref = sscrapref
	'READ
	F.Intrinsic.String.Concat("select SCRAP_REF,QUALITY,REASON_CODE,QTY from SCRAP_DATA where SCRAP_REF='",V.global.sScrapRef,"'",V.global.sSel)
	F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.global.sSel)

		Function.Intrinsic.Control.DoUntil(V.odbc.Con!rstSel.eof,=,True)
			'Function.Intrinsic.Control.ExitDo

			V.global.sQualitynbr.Set(V.ODBC.Con!rstSel.FieldValTrim!Quality)
			V.global.sScrapqty.Set(V.ODBC.Con!rstSel.FieldValTrim!QTY)
			V.global.sScrapCode.Set(V.ODBC.Con!rstSel.FieldValTrim!Reason_Code)

				'READ
				F.Intrinsic.String.Concat("select SCRAP_CODE_DESC from V_RJCT_SCRP_CODES where SCRAP_CODE='",V.global.sScrapCode,"'",V.global.sSelA)
				F.ODBC.Connection!Con.OpenRecordsetRO("rstSelA",V.global.sSelA)
				F.Intrinsic.Control.If(V.ODBC.Con!rstSelA.EOF,=,False)
					V.global.sScrapDescription.Set(V.ODBC.Con!rstSelA.FieldValTrim!SCRAP_CODE_DESC)
					F.Intrinsic.Control.EndIf
				F.ODBC.Con!rstSelA.Close

				Function.Data.DataTable.SetValue("dtLableData",0,"QUALITY_NO",V.global.sQualitynbr)
				Function.Data.DataTable.SetValue("dtLableData",0,"SCRAP_CODE",V.global.sScrapCode)
				Function.Data.DataTable.SetValue("dtLableData",0,"SCRAP_CODE_DESC",V.global.sScrapDescription)
				Function.Data.DataTable.SetValue("dtLableData",0,"SCRAP_QTY",V.global.sscrapqty)			
				
				' Scrap Printer added as optional quantentine label printer when scrap labels printed on colored label stock
				F.Global.BI.PrintCodesoftLabelFromDataTable(V.Local.iBIRunID,V.Local.iLogID,"dtLableData",V.global.sScrapPrinter,True)
		F.ODBC.con!rstSel.MoveNext
		Function.Intrinsic.Control.Loop
	F.ODBC.Con!rstSel.Close


		
F.Intrinsic.Control.EndIf

Function.Data.DataTable.RemoveColumn("dtLableData","SCRAP_FLAG")
Function.Data.DataTable.RemoveColumn("dtLableData","CODE_SORT")
Function.Global.BI.StopLogging(v.Local.iLogID)


Program.Sub.BICodeSoft.End

Program.Sub.BICrystal.Start	
'PRINT LABLE IF NOT Compleately Scrap
F.Intrinsic.Control.If(V.global.sQty,<>,".000000")
	V.global.sScrapflag.Set("N")
	F.Intrinsic.String.Split("TRMNL*!*Job*!*Suffix*!*Scrapflag","*!*",V.global.sParams)
	F.Intrinsic.String.Concat(V.Caller.Terminal,"*!*",V.global.sjob,"*!*",V.global.ssuffix,"*!*",V.global.sScrapflag,V.global.sValues)
	F.Intrinsic.String.Split(V.global.sValues,"*!*",V.global.sValues)
	
	Function.Intrinsic.Control.If(V.Global.sTPrinter,=,"")
		F.Global.BI.PrintReport(V.global.iRptId,0,V.global.sParams,V.global.sValues,V.global.sTPrinter,True)
	Function.Intrinsic.Control.Else
		F.Global.BI.PrintReport(V.global.iRptId,3,V.global.sParams,V.global.sValues,V.global.sTPrinter,True)
	Function.Intrinsic.Control.EndIf
	
F.Intrinsic.Control.Endif


'PRINT SCRAP IF SCRAP, and SCrap Flag set to Y
F.Intrinsic.Control.If(V.global.sscrapqty,<>,".000000")
	V.global.sScrapflag.Set("Y")

'Scrap - loop through scrap_data table by scrap_ref = sscrapref

	F.Intrinsic.String.Concat("select SCRAP_REF,QUALITY,REASON_CODE,QTY from SCRAP_DATA where SCRAP_REF='",V.global.sScrapRef,"'",V.global.sSel)
	F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.global.sSel)

		Function.Intrinsic.Control.DoUntil(V.odbc.Con!rstSel.eof,=,True)
			'Function.Intrinsic.Control.ExitDo

			V.global.sQualitynbr.Set(V.ODBC.Con!rstSel.FieldValTrim!Quality)
			V.global.sScrapqty.Set(V.ODBC.Con!rstSel.FieldValTrim!QTY)
			V.global.sScrapCode.Set(V.ODBC.Con!rstSel.FieldValTrim!Reason_Code)


				F.Intrinsic.String.Concat("select SCRAP_CODE_DESC from V_RJCT_SCRP_CODES where SCRAP_CODE='",V.global.sScrapCode,"'",V.global.sSelA)
				F.ODBC.Connection!Con.OpenRecordsetRO("rstSelA",V.global.sSelA)
				F.Intrinsic.Control.If(V.ODBC.Con!rstSelA.EOF,=,False)
					V.global.sScrapDescription.Set(V.ODBC.Con!rstSelA.FieldValTrim!SCRAP_CODE_DESC)
					F.Intrinsic.Control.EndIf
				F.ODBC.Con!rstSelA.Close



					F.Intrinsic.String.Concat("select * from ATG_WIP_Oper_Label where TRMNL='",V.Caller.Terminal,"'",V.global.sSelB)
					F.ODBC.Connection!Con.OpenRecordsetRW("rstSelB",V.global.sSelB)
						
							F.ODBC.Con!rstSelB.Set!QUALITY_NO(V.global.sQualitynbr)
							F.ODBC.Con!rstSelB.Set!SCRAP_CODE(V.global.sScrapCode)
							F.ODBC.Con!rstSelB.Set!SCRAP_CODE_DESC(V.global.sScrapDescription)
							F.ODBC.Con!rstSelB.Set!SCRAP_QTY(V.global.sscrapqty)
					F.ODBC.Con!rstSelB.Update
					F.ODBC.Con!rstSelB.Close
		

		F.Intrinsic.String.Split("TRMNL*!*Job*!*Suffix*!*Scrapflag","*!*",V.global.sParams)
		F.Intrinsic.String.Concat(V.Caller.Terminal,"*!*",V.global.sjob,"*!*",V.global.ssuffix,"*!*",V.global.sScrapflag,V.global.sValues)
		F.Intrinsic.String.Split(V.global.sValues,"*!*",V.global.sValues)
	'	F.Global.BI.PrintReport(100018,0,V.global.sParams,V.global.sValues,"",True)
	' Scrap Printer added as optional quantentine label printer when scrap labels printed on colored label stock
	Function.Intrinsic.Control.If(V.Global.sScrapPrinter,=,"")
		F.Global.BI.PrintReport(V.global.iRptId,3,V.global.sParams,V.global.sValues,V.global.sScrapPrinter,True)
	Function.Intrinsic.Control.Else
		F.Global.BI.PrintReport(V.global.iRptId,3,V.global.sParams,V.global.sValues,V.global.sScrapPrinter,True)
	Function.Intrinsic.Control.EndIf

		F.ODBC.con!rstSel.MoveNext
		Function.Intrinsic.Control.Loop
	F.ODBC.Con!rstSel.Close


F.Intrinsic.Control.Endif
Program.Sub.BICrystal.End

Program.Sub.MoveTicketLog.Start
''Check for log Table, if exsists, create record, if not exit.
v.Local.bTable.Declare(Boolean)
v.Local.sSql.Declare(String)
V.Local.sEmplyeeID.Declare(String)

Function.Intrinsic.String.Build("SELECT TOP 1 EMPLOYEE FROM EMPLOYEE_MSTR WHERE NAME ='{0}'",v.Global.sEmployee,v.Local.sSql)
Function.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSql, v.Local.sEmplyeeID)

Function.ODBC.Connection!con.TableExists("OYB_MOVETICKET_LG",v.Local.bTable)
Function.Intrinsic.Control.If(v.Local.bTable, =, True)
	v.Local.sSql.Set("INSERT INTO OYB_MOVETICKET_LG (PRINT_TIME, JOB, SUFFIX, SEQUENCE, PEICES_GOOD, PEICES_SCRAP, EMPLOYEE_ID) VALUES (NOW(),")
	Function.Intrinsic.String.Build("{0}'{1}','{2}','{3}'",v.Local.sSql, V.global.sjob, V.global.ssuffix, V.global.sseq, v.Local.sSql)
	Function.Intrinsic.String.Build("{0},{1},{2},'{3}')",v.Local.sSql, V.global.sQty, V.global.sscrapqty, v.Local.sEmplyeeID, v.Local.sSql)
	Function.ODBC.Connection!con.Execute(v.Local.sSql)
Function.Intrinsic.Control.EndIf



Program.Sub.MoveTicketLog.End